ATM SOURCE CODE FOR CREATING ACCOUNTimport randomclass Account: # Construct an Account object def __init__(self, id, balance = 0, annualInterestRate = 3.4): self.id = id self.balance = balance self.annualInterestRate = annualInterestRate
def getId(self): return self.id
def getBalance(self): return self.balance
def getAnnualInterestRate(self): return self.annualInterestRate
def getMonthlyInterestRate(self): return self.annualInterestRate / 12
def withdraw(self, amount): self.balance -= amount
def deposit(self, amount): self.balance += amount
def getMonthlyInterest(self): return self.balance * self.getMonthlyInterestRate()
By creating the main() method, we will use a range to have all users to enter a 4-digit pin to access their account.def main(): # Creating accounts accounts = [] for i in range(1000, 9999): account = Account(i, 0) accounts.append(account)
CODE FOR CREATING ALL THE PROCESS OF ATM
# ATM Processes while True:
# Reading id from user id = int(input("\nEnter account pin: "))
# Loop till id is valid while id < 1000 or id > 9999: id = int(input("\nInvalid Id.. Re-enter: "))
# Iterating over account session while True:
# Printing menu print("\n1 - View Balance \t 2 - Withdraw \t 3 - Deposit \t 4 - Exit ")
# Reading selection selection = int(input("\nEnter your selection: "))
# Getting account object for acc in accounts: # Comparing account id if acc.getId() == id: accountObj = acc break
# View Balance if selection == 1: # Printing balance print(accountObj.getBalance())
# Withdraw elif selection == 2: # Reading amount amt = float(input("\nEnter amount to withdraw: "))
